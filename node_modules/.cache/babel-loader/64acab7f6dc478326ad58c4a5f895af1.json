{"ast":null,"code":"var _jsxFileName = \"/home/vini/Documents/Code/Meus projetos/9. website-avengers/the-avengers/src/0_components/2_module/MyForm.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\nimport FormError from \"./FormError\";\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Please enter your superhero name\"),\n  realName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Please enter your real name\"),\n  superpower: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255 characters\").required(\"Please enter at least one superpower\"),\n  country: Yup.string() // TODO: CREATE COUNTRY LIST\n  .min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255 characters\").required(\"Please choose your country\"),\n  // retiredHuman: Yup.boolean().required(\"DOIT\"), FIXME: how the fuck do you validate this shit?\n  email: Yup.string().email(\"Must be a valid email\").max(255, \"Must be shorter than 255 characters\").required(\"Please enter your email\")\n});\nexport default class MyForm extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        superName: \"\",\n        realName: \"\",\n        superpower: [],\n        country: \"\",\n        retiredHuman: \"\",\n        email: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: (data, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting = false;\n        alert(JSON.stringify(data, null, 2));\n        setSubmitting = true;\n        resetForm();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ({\n      values,\n      isSubmitting,\n      errors\n    }) => React.createElement(Form, {\n      id: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"superName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"What is your superhero name?\"), React.createElement(Field, {\n      placeholder: \"Chapolin Colorado\",\n      name: \"superName\",\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"retiredHuman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Yes\"), React.createElement(Field, {\n      name: \"retiredHuman\",\n      type: \"radio\",\n      value: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn_submit-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"btn_submit\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"label\", {\n      htmlFor: \"retiredHuman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"No\"), React.createElement(Field, {\n      name: \"retiredHuman\",\n      type: \"radio\",\n      value: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn_submit-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"btn_submit\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/vini/Documents/Code/Meus projetos/9. website-avengers/the-avengers/src/0_components/2_module/MyForm.js"],"names":["React","Component","Formik","Form","Field","Yup","FormStyle","FormError","validationSchema","object","shape","superName","string","min","max","required","realName","superpower","country","email","MyForm","render","retiredHuman","data","setSubmitting","resetForm","alert","JSON","stringify","values","isSubmitting","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\n\nimport FormError from \"./FormError\";\n\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Please enter your superhero name\"),\n  realName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Please enter your real name\"),\n  superpower: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255 characters\")\n    .required(\"Please enter at least one superpower\"),\n  country: Yup.string() // TODO: CREATE COUNTRY LIST\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255 characters\")\n    .required(\"Please choose your country\"),\n  // retiredHuman: Yup.boolean().required(\"DOIT\"), FIXME: how the fuck do you validate this shit?\n  email: Yup.string()\n    .email(\"Must be a valid email\")\n    .max(255, \"Must be shorter than 255 characters\")\n    .required(\"Please enter your email\")\n});\n\nexport default class MyForm extends Component {\n  render() {\n    return (\n      <div>\n        <FormStyle>\n          <Formik\n            initialValues={{\n              superName: \"\",\n              realName: \"\",\n              superpower: [],\n              country: \"\",\n              retiredHuman: \"\",\n              email: \"\"\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, { setSubmitting, resetForm }) => {\n              setSubmitting = false;\n              alert(JSON.stringify(data, null, 2));\n\n              setSubmitting = true;\n              resetForm();\n            }}\n          >\n            {({ values, isSubmitting, errors }) => (\n              <Form id=\"myForm\">\n                {/* SUPERHERO */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"superName\">\n                    What is your superhero name?\n                  </label>\n                  <Field\n                    placeholder=\"Chapolin Colorado\"\n                    name=\"superName\"\n                    type=\"input\"\n                  />\n                </div>\n\n                {/* RADIO */}\n                <label htmlFor=\"retiredHuman\">Yes</label>\n                <Field name=\"retiredHuman\" type=\"radio\" value=\"yes\" />\n                <div className=\"btn_submit-box\">\n                  <button id=\"btn_submit\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </button>\n                </div>\n                <label htmlFor=\"retiredHuman\">No</label>\n                <Field name=\"retiredHuman\" type=\"radio\" value=\"no\" />\n                <div className=\"btn_submit-box\">\n                  <button id=\"btn_submit\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n          {/* <Formik\n            initialValues={{\n              superName: \"\",\n              realName: \"\",\n              superpower: \"\",\n              country: \"\",\n              retiredHuman: \"\",\n              email: \"\"\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                resetForm();\n                setSubmitting(false);\n              }, 500);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => (\n              <form id=\"myForm\" onSubmit={handleSubmit}>\n                <div className=\"input_row\">\n                  <label htmlFor=\"superName\">\n                    What is your superhero name?\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"superName\"\n                    id=\"superName\"\n                    placeholder=\"Spider-Man\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.superName}\n                    className={\n                      touched.superName && errors.superName\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n\n                  <FormError\n                    touched={touched.superName}\n                    message={errors.superName}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"realName\">What is your real name?</label>\n                  <input\n                    type=\"text\"\n                    name=\"realName\"\n                    id=\"realName\"\n                    placeholder=\"Peter Parker\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.realName}\n                    className={\n                      touched.realName && errors.realName ? \"input_error\" : null\n                    }\n                  />\n\n                  <FormError\n                    touched={touched.realName}\n                    message={errors.realName}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"superpower\">What are your superpowers?</label>\n                  <input\n                    type=\"text\"\n                    name=\"superpower\"\n                    id=\"superpower\"\n                    placeholder=\"Strenght, shoots web, lick own elbow\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.superpower}\n                    className={\n                      touched.superpower && errors.superpower\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.superpower}\n                    message={errors.superpower}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"country\">What country do you live in?</label>\n                  <input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"country\"\n                    placeholder=\"United States\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.country}\n                    className={\n                      touched.country && errors.country ? \"input_error\" : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.country}\n                    message={errors.country}\n                  />\n                </div>\n\n                <div className=\"input_row input_row-retiredHuman \">\n                  <label htmlFor=\"retiredHuman\">\n                    Have you ever retired a human by mistake?\n                  </label>\n                  <input\n                    type=\"radio\"\n                    name=\"retiredHumanYes\"\n                    id=\"retiredHuman\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.retiredHuman}\n                    className={\n                      touched.retiredHuman && errors.retiredHuman\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n                  <div className=\"span_box\">\n                    <span>Yes, my bad</span>\n                  </div>\n\n                  <div className=\"input_row input_row-retiredHuman\">\n                    <input\n                      type=\"radio\"\n                      name=\"retiredHumanNo\"\n                      id=\"retiredHuman\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.retiredHuman}\n                      className={\n                        touched.retiredHuman && errors.retiredHuman\n                          ? \"input_error\"\n                          : null\n                      }\n                    />\n                    <div className=\"span_box\">\n                      <span>No, and I'll never to it again</span>\n                    </div>\n                    <FormError\n                      touched={touched.retiredHuman}\n                      message={errors.retiredHuman}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"email\">\n                    Tell us your email so we can reach you\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"iamnotspiderman@avengers.com\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    className={\n                      touched.email && errors.email ? \"input_error\" : null\n                    }\n                  />\n                  <FormError touched={touched.email} message={errors.email} />\n                </div>\n\n                <div className=\"btn_submit-box\">\n                  <button id=\"btn_submit\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </button>\n                </div>\n              </form>\n            )}\n          </Formik> */}\n        </FormStyle>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}