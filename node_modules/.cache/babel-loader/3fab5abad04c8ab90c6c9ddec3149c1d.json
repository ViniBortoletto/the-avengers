{"ast":null,"code":"var _jsxFileName = \"/home/vini/Documents/Code/Meus projetos/9. website-avengers/website-avengers/src/0_components/2_module/Form.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Must enter a name\"),\n  email: Yup.string().email(\"Must be a valid email\").max(255, \"Must be shorter than 255\").required(\"Must enter a email\")\n});\nexport default function Form() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      superName: \"\",\n      email: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 500);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => React.createElement(\"form\", {\n    id: \"myForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input_row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"superName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"What's your superhero name?\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"superName\",\n    id: \"superName\",\n    placeholder: \"Chapolin Colorado\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.superName,\n    className: touched.superName && errors.superName ? \"input_error\" : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input_row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"realName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"What's your real name?\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"realName\",\n    id: \"realName\",\n    placeholder: \"Peter Parker\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.realName,\n    classname: touched.realName && errors.realName ? 'input_error' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input_row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["/home/vini/Documents/Code/Meus projetos/9. website-avengers/website-avengers/src/0_components/2_module/Form.js"],"names":["React","Component","Formik","Yup","FormStyle","validationSchema","object","shape","superName","string","min","max","required","email","Form","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","realName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\n\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Must enter a name\"),\n  email: Yup.string()\n    .email(\"Must be a valid email\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Must enter a email\")\n});\n\nexport default function Form() {\n  return (\n    <div>\n      <FormStyle>\n        <Formik\n          initialValues={{ superName: \"\", email: \"\" }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              resetForm();\n              setSubmitting(false);\n            }, 500);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          }) => (\n            <form id=\"myForm\">\n              <div className=\"input_row\">\n                <label htmlFor=\"superName\">What's your superhero name?</label>\n                <input\n                  type=\"text\"\n                  name=\"superName\"\n                  id=\"superName\"\n                  placeholder=\"Chapolin Colorado\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.superName}\n                  className={touched.superName && errors.superName ? \"input_error\" : null}\n                />\n              </div>\n\n              <div className=\"input_row\">\n                <label htmlFor=\"realName\">What's your real name?</label>\n                <input type=\"text\" name='realName' id='realName' placeholder='Peter Parker' onChange={handleChange} onBlur={handleBlur} value={values.realName} classname={touched.realName && errors.realName ? 'input_error' :null} />\n              </div>\n\n              <div className=\"input_row\">\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* <FormStyle\n          initialValues={{ name: \"\", email: \"\" }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              resetForm();\n              setSubmitting(false);\n            }, 500);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          }) => (\n            <form id=\"myForm\" onSubmit={handleSubmit}>\n              <div className=\"input_row\">\n                <label htmlFor=\"superName\">\n                  What's is your superhero name?\n                  <input\n                    type=\"text\"\n                    name=\"superName\"\n                    id=\"superName\"\n                    placeholder=\"Chapolin Colorado\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                    className={touched.name && errors.name ? \"has-error\" : null}\n                  />\n                </label>\n              </div>\n\n              <div className=\"input_row\">\n                <label htmlFor=\"realName\">\n                  What's is your real name?\n                  <input\n                    type=\"text\"\n                    name=\"realName\"\n                    id=\"realName\"\n                    placeholder=\"Peter Parker\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.name}\n                    className={touched.name && errors.name ? \"has-error\" : null}\n                  />\n                </label>\n              </div>\n\n              <div className=\"input-row\">\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n              </div>\n            </form>\n          )}\n        </FormStyle> */}\n        </Formik>\n      </FormStyle>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}