{"ast":null,"code":"var _jsxFileName = \"/home/vini/Documents/Code/Meus projetos/9. website-avengers/website-avengers/src/0_components/2_module/Form.js\";\nimport React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Parallax from \"react-rellax\";\nimport submitIcon from \"../../3_images/4_becomeAnAvenger/icon_submit.svg\";\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\nimport FormError from \"../2_module/FormError\";\nconst superNameValidation = Yup.object().shape({\n  superName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Must enter a name\").matches(/^([^0-9]*)$/, \"Name should contain only letters\")\n});\nconst realNameValidation = Yup.object().shape({\n  superName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Must enter a name\").matches(/^([^0-9]*)$/, \"Name should contain only letters\")\n});\nexport default class Form extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changeInput = () => {\n      alert(\"hi\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FormStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        superName: \"\"\n      },\n      validationSchema: superNameValidation,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(\"form\", {\n      id: \"form_superName\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"superName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"What is your superhero name?\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"superName\",\n      id: \"superName\",\n      placeholder: \"Chapolin Colorado\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.superName,\n      className: touched.superName && errors.superName ? \"input_error\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(FormError, {\n      touched: touched.superName,\n      message: errors.superName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"nextQuestion_button\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"nextQuestion_button-icon\",\n      src: submitIcon,\n      alt: \"submit button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))), React.createElement(Formik, {\n      initialValues: {\n        realName: \"\"\n      },\n      validationSchema: realNameValidation,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 500);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => React.createElement(\"form\", {\n      id: \"form_realName\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"realName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"What is your real name?\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"realName\",\n      id: \"realName\",\n      placeholder: \"Peter Parker\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.realName,\n      className: touched.realName && errors.realName ? \"input_error\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(FormError, {\n      touched: touched.realName,\n      message: errors.realName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"nextQuestion_button\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"nextQuestion_button-icon\",\n      src: submitIcon,\n      alt: \"submit button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/home/vini/Documents/Code/Meus projetos/9. website-avengers/website-avengers/src/0_components/2_module/Form.js"],"names":["React","Component","Formik","Yup","Parallax","FormStyle","FormError","superNameValidation","object","shape","superName","string","min","max","required","matches","realNameValidation","Form","changeInput","alert","render","values","setSubmitting","resetForm","setTimeout","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitIcon","realName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Parallax from \"react-rellax\";\n\nimport submitIcon from \"../../3_images/4_becomeAnAvenger/icon_submit.svg\";\nimport { FormStyle } from \"../../2_styles/3_module/FormStyle\";\n\nimport FormError from \"../2_module/FormError\";\n\nconst superNameValidation = Yup.object().shape({\n  superName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Must enter a name\")\n    .matches(/^([^0-9]*)$/, \"Name should contain only letters\")\n});\n\nconst realNameValidation = Yup.object().shape({\n  superName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Must enter a name\")\n    .matches(/^([^0-9]*)$/, \"Name should contain only letters\")\n});\n\nexport default class Form extends Component {\n  changeInput = () => {\n    alert(\"hi\");\n  };\n\n  render() {\n    return (\n      <div>\n        <FormStyle>\n          <Formik\n            initialValues={{\n              superName: \"\"\n            }}\n            validationSchema={superNameValidation}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                resetForm();\n                setSubmitting(false);\n              }, 500);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => (\n              <form id=\"form_superName\" onSubmit={handleSubmit}>\n                <div className=\"input_row\">\n                  <label htmlFor=\"superName\">\n                    What is your superhero name?\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"superName\"\n                    id=\"superName\"\n                    placeholder=\"Chapolin Colorado\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.superName}\n                    className={\n                      touched.superName && errors.superName\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.superName}\n                    message={errors.superName}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  id=\"nextQuestion_button\"\n                  disabled={isSubmitting}\n                >\n                  <img\n                    id=\"nextQuestion_button-icon\"\n                    src={submitIcon}\n                    alt=\"submit button\"\n                  />\n                </button>\n              </form>\n            )}\n          </Formik>\n          <Formik\n            initialValues={{\n              realName: \"\"\n            }}\n            validationSchema={realNameValidation}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                resetForm();\n                setSubmitting(false);\n              }, 500);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => (\n              <form id=\"form_realName\" onSubmit={handleSubmit}>\n                <div className=\"input_row\">\n                  <label htmlFor=\"realName\">What is your real name?</label>\n                  <input\n                    type=\"text\"\n                    name=\"realName\"\n                    id=\"realName\"\n                    placeholder=\"Peter Parker\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.realName}\n                    className={\n                      touched.realName && errors.realName ? \"input_error\" : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.realName}\n                    message={errors.realName}\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  id=\"nextQuestion_button\"\n                  disabled={isSubmitting}\n                >\n                  <img\n                    id=\"nextQuestion_button-icon\"\n                    src={submitIcon}\n                    alt=\"submit button\"\n                  />\n                </button>\n              </form>\n            )}\n          </Formik>\n        </FormStyle>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}