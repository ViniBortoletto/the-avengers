{"ast":null,"code":"var _jsxFileName = \"/home/vini/Documents/Code/Meus projetos/9. website-avengers/the-avengers/src/0_components/2_module/MyForm.js\";\nimport React, { Component } from \"react\"; // import Autosuggest from \"react-autosuggest\";\n// import axios from \"axios\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { MyFormStyle } from \"../../2_styles/3_module/MyFormStyle\";\nimport FormError from \"./FormError\";\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Please enter your superhero name\"),\n  realName: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255\").required(\"Please enter your real name\"),\n  superpower: Yup.string().min(2, \"Must have at least 2 characters\").max(255, \"Must be shorter than 255 characters\").required(\"Please enter at least one superpower\"),\n  country: Yup.string().required(\"Please choose a country\"),\n  retiredHuman: Yup.string().required(\"Please choose an option\"),\n  email: Yup.string().email(\"Must be a valid email\").max(255, \"Must be shorter than 255 characters\").required(\"Please enter your email\")\n});\nexport default class MyForm extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(MyFormStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        superName: \"\",\n        realName: \"\",\n        superpower: \"\",\n        country: \"\",\n        retiredHuman: \"\",\n        email: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: (data, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting = false;\n        alert(JSON.stringify(data, null, 2));\n        setSubmitting = true;\n        resetForm();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ({\n      values,\n      isSubmitting,\n      errors\n    }) => React.createElement(Form, {\n      id: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"superName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"What is your superhero name?\"), React.createElement(Field, {\n      placeholder: \"Spider-Man\",\n      name: \"superName\",\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"superName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"realName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"What is your real name?\"), React.createElement(Field, {\n      placeholder: \"Peter Parker\",\n      name: \"realName\",\n      type: \"input\",\n      className: touched.realName && errors.realName ? \"input_error\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"realName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"superpower\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"What are your superpowers?\"), React.createElement(Field, {\n      placeholder: \"Super strength, spider sense, lick own elbow\",\n      name: \"superpower\",\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"superpower\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Where do you live?\"), React.createElement(Field, {\n      placeholder: \"United States\",\n      name: \"country\",\n      type: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input_row retiredHuman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"retiredHuman \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Have you ever retired a human being?\"), React.createElement(\"div\", {\n      className: \"radio_group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"radio_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"retiredHuman\",\n      type: \"radio\",\n      value: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \"Yes, my bad\"), React.createElement(\"label\", {\n      className: \"radio_label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"retiredHuman\",\n      type: \"radio\",\n      value: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"No, and I'll never do it again\")), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"retiredHuman\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"retiredHuman \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"What's your email?\"), React.createElement(Field, {\n      placeholder: \"iamnotspidey@example.com\",\n      name: \"email\",\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"\\xA0\", React.createElement(ErrorMessage, {\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"btn_submit-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"btn_submit\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["/home/vini/Documents/Code/Meus projetos/9. website-avengers/the-avengers/src/0_components/2_module/MyForm.js"],"names":["React","Component","Formik","Form","Field","ErrorMessage","Yup","MyFormStyle","FormError","validationSchema","object","shape","superName","string","min","max","required","realName","superpower","country","retiredHuman","email","MyForm","render","data","setSubmitting","resetForm","alert","JSON","stringify","values","isSubmitting","errors","touched"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// import Autosuggest from \"react-autosuggest\";\n// import axios from \"axios\";\n\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { MyFormStyle } from \"../../2_styles/3_module/MyFormStyle\";\n\nimport FormError from \"./FormError\";\n\nconst validationSchema = Yup.object().shape({\n  superName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Please enter your superhero name\"),\n  realName: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255\")\n    .required(\"Please enter your real name\"),\n  superpower: Yup.string()\n    .min(2, \"Must have at least 2 characters\")\n    .max(255, \"Must be shorter than 255 characters\")\n    .required(\"Please enter at least one superpower\"),\n  country: Yup.string().required(\"Please choose a country\"),\n  retiredHuman: Yup.string().required(\"Please choose an option\"),\n  email: Yup.string()\n    .email(\"Must be a valid email\")\n    .max(255, \"Must be shorter than 255 characters\")\n    .required(\"Please enter your email\")\n});\n\nexport default class MyForm extends Component {\n  render() {\n    return (\n      <div>\n        <MyFormStyle>\n          <Formik\n            initialValues={{\n              superName: \"\",\n              realName: \"\",\n              superpower: \"\",\n              country: \"\",\n              retiredHuman: \"\",\n              email: \"\"\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(data, { setSubmitting, resetForm }) => {\n              setSubmitting = false;\n              alert(JSON.stringify(data, null, 2));\n\n              setSubmitting = true;\n              resetForm();\n            }}\n          >\n            {({ values, isSubmitting, errors }) => (\n              <Form id=\"myForm\">\n                {/* SUPERHERO NAME */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"superName\">\n                    What is your superhero name?\n                  </label>\n                  <Field\n                    placeholder=\"Spider-Man\"\n                    name=\"superName\"\n                    type=\"input\"\n                  />\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"superName\" />\n                  </div>\n                </div>\n\n                {/* REALNAME */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"realName\">What is your real name?</label>\n                  <Field\n                    placeholder=\"Peter Parker\"\n                    name=\"realName\"\n                    type=\"input\"\n                    className={\n                      touched.realName && errors.realName ? \"input_error\" : null\n                    }\n                  />\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"realName\" />\n                  </div>\n                </div>\n\n                {/* SUPERPOWER */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"superpower\">What are your superpowers?</label>\n                  <Field\n                    placeholder=\"Super strength, spider sense, lick own elbow\"\n                    name=\"superpower\"\n                    type=\"input\"\n                  />\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"superpower\" />\n                  </div>\n                </div>\n\n                {/* COUNTRY */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"country\">Where do you live?</label>\n                  <Field\n                    placeholder=\"United States\"\n                    name=\"country\"\n                    type=\"input\"\n                  />\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"country\" />\n                  </div>\n                </div>\n\n                {/* RETIRED HUMAN */}\n                <div className=\"input_row retiredHuman\">\n                  <label htmlFor=\"retiredHuman \">\n                    Have you ever retired a human being?\n                  </label>\n                  <div className=\"radio_group\">\n                    <label className=\"radio_label\">\n                      <Field name=\"retiredHuman\" type=\"radio\" value=\"yes\" />\n                      Yes, my bad\n                    </label>\n\n                    <label className=\"radio_label\">\n                      <Field name=\"retiredHuman\" type=\"radio\" value=\"no\" />\n                      No, and I'll never do it again\n                    </label>\n                  </div>\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"retiredHuman\" />\n                  </div>\n                </div>\n\n                {/* EMAIL */}\n                <div className=\"input_row\">\n                  <label htmlFor=\"retiredHuman \">What's your email?</label>\n                  <Field\n                    placeholder=\"iamnotspidey@example.com\"\n                    name=\"email\"\n                    type=\"email\"\n                  />\n\n                  <div className=\"error\">\n                    &nbsp;\n                    <ErrorMessage name=\"email\" />\n                  </div>\n                </div>\n\n                {/* SUBMIT BUTTON */}\n                <div className=\"btn_submit-box\">\n                  <button id=\"btn_submit\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n          {/* <Formik\n            initialValues={{\n              superName: \"\",\n              realName: \"\",\n              superpower: \"\",\n              country: \"\",\n              retiredHuman: \"\",\n              email: \"\"\n            }}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                resetForm();\n                setSubmitting(false);\n              }, 500);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n            }) => (\n              <form id=\"myForm\" onSubmit={handleSubmit}>\n                <div className=\"input_row\">\n                  <label htmlFor=\"superName\">\n                    What is your superhero name?\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"superName\"\n                    id=\"superName\"\n                    placeholder=\"Spider-Man\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.superName}\n                    className={\n                      touched.superName && errors.superName\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n\n                  <FormError\n                    touched={touched.superName}\n                    message={errors.superName}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"realName\">What is your real name?</label>\n                  <input\n                    type=\"text\"\n                    name=\"realName\"\n                    id=\"realName\"\n                    placeholder=\"Peter Parker\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.realName}\n                    className={\n                      touched.realName && errors.realName ? \"input_error\" : null\n                    }\n                  />\n\n                  <FormError\n                    touched={touched.realName}\n                    message={errors.realName}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"superpower\">What are your superpowers?</label>\n                  <input\n                    type=\"text\"\n                    name=\"superpower\"\n                    id=\"superpower\"\n                    placeholder=\"Strenght, shoots web, lick own elbow\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.superpower}\n                    className={\n                      touched.superpower && errors.superpower\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.superpower}\n                    message={errors.superpower}\n                  />\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"country\">What country do you live in?</label>\n                  <input\n                    type=\"text\"\n                    name=\"country\"\n                    id=\"country\"\n                    placeholder=\"United States\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.country}\n                    className={\n                      touched.country && errors.country ? \"input_error\" : null\n                    }\n                  />\n                  <FormError\n                    touched={touched.country}\n                    message={errors.country}\n                  />\n                </div>\n\n                <div className=\"input_row input_row-retiredHuman \">\n                  <label htmlFor=\"retiredHuman\">\n                    Have you ever retired a human by mistake?\n                  </label>\n                  <input\n                    type=\"radio\"\n                    name=\"retiredHumanYes\"\n                    id=\"retiredHuman\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.retiredHuman}\n                    className={\n                      touched.retiredHuman && errors.retiredHuman\n                        ? \"input_error\"\n                        : null\n                    }\n                  />\n                  <div className=\"span_box\">\n                    <span>Yes, my bad</span>\n                  </div>\n\n                  <div className=\"input_row input_row-retiredHuman\">\n                    <input\n                      type=\"radio\"\n                      name=\"retiredHumanNo\"\n                      id=\"retiredHuman\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.retiredHuman}\n                      className={\n                        touched.retiredHuman && errors.retiredHuman\n                          ? \"input_error\"\n                          : null\n                      }\n                    />\n                    <div className=\"span_box\">\n                      <span>No, and I'll never to it again</span>\n                    </div>\n                    <FormError\n                      touched={touched.retiredHuman}\n                      message={errors.retiredHuman}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"input_row\">\n                  <label htmlFor=\"email\">\n                    Tell us your email so we can reach you\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"iamnotspiderman@avengers.com\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    className={\n                      touched.email && errors.email ? \"input_error\" : null\n                    }\n                  />\n                  <FormError touched={touched.email} message={errors.email} />\n                </div>\n\n                <div className=\"btn_submit-box\">\n                  <button id=\"btn_submit\" type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </button>\n                </div>\n              </form>\n            )}\n          </Formik> */}\n        </MyFormStyle>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}